#+TITLE:     Docker
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/article.css" />
#+html_head: <link rel="stylesheet" type="text/css" href="../css/toc.css" />
#+OPTIONS:   tex:verbatim

* Install Docker CE for Ubuntu
  See [[https://docs.docker.com/install/linux/docker-ce/ubuntu/][details]] about installing Docker CE.
** Using Docker as non-root user
#+begin_src sh
  sudo usermod -aG docker <your-user>
#+end_src

** Docker Compose
#+begin_src sh
  curl -L https://github.com/docker/compose/releases/download/<version>/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
  chmod a+x /usr/local/bin/docker-compose
#+end_src

* Docker Proxy Setting
  [[https://stackoverflow.com/questions/26550360/docker-ubuntu-behind-proxy][ref]]

#+begin_src sh
  $ cat /etc/systemd/system/docker.service.d/http-proxy.conf
  [Service]
  Environment="HTTP_PROXY=http://proxy-prc.intel.com:912/" "NO_PROXY=localhost, 127.0.0.1, intel.com"
  $ cat /etc/systemd/system/docker.service.d/https-proxy.conf
  [Service]
  Environment="HTTPS_PROXY=http://proxy-prc.intel.com:912/" "NO_PROXY=localhost, 127.0.0.1, intel.com"

  $ sudo systemctl daemon-reload
  $ sudo systemctl restart docker
#+end_src

* Docker Usages

** Run with bash
#+begin_src sh
  docker run -it ubuntu:18.04
#+end_src

** Attach to a container
#+begin_src sh
  docker exec -it <image> /bin/bash
#+end_src

** Check history
#+begin_src sh
  docker image history --no-trunc <image_name> > image_history
#+end_src

** Check logs of container
#+begin_src sh
  docker logs <container>
#+end_src

** Save image
#+begin_src sh
  docker save <image_name> > tmp.tar
  tar xvf tmp.tar
#+end_src

** Remove all containers
#+begin_src sh
  docker rm -f $(docker ps -a -q)
#+end_src

** Delete all docker images
#+begin_src sh
  docker rmi -f $(docker images -q)
#+end_src
** Delete docker images with no tags
#+begin_src sh
  docker rmi $(docker images --filter dangling=true -q)
#+end_src
** Delete volumes
#+begin_src sh
  docker volume rm $(docker volume ls -qf dangling=true)
#+end_src


* Dockerfile Usages

** Heredoc
   To create text file with multiple lines, in bash we can use here-document.
#+begin_src sh
  cat <<EOF > /tmp/tmp.txt
  hello line #1
  hello line #2
  finish
  EOF
#+end_src
   Use =printf= in Dockerfile to get the equivalent.
#+begin_src sh
  RUN printf 'hello line #1\n\
  hello line #2\n\
  finish' > /tmp/tmp.txt
#+end_src

* Docker China Mirrors

  Add configure file: =/etc/docker/daemon.json=, then restart docker.

#+begin_src json
{
    "registry-mirrors": ["https://registry.docker-cn.com"]
}
#+end_src
