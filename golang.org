#+TITLE: Go Development
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/article.css" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/toc.css" />
#+INDEX: golang

* Go with Docker

Docker can be a good environment for go developement. You have more versions to choose in [Docker Hub](hub.docker.com) without mess up your PC.

To get golang image with specific version.

#+BEGIN_SRC bash
$ docker pull golang:1.11-alpine
#+END_SRC

Run golang with interactive mode.

#+BEGIN_SRC bash
$ docker run -it golang:1.11-alpine
#+END_SRC

Edit **go** file in local folder ./src/helloworld.go

#+BEGIN_SRC go
  package main

  import "fmt"

  func main() {
          fmt.Println("Hello world!");
  }
#+END_SRC

You can send this file when start **go** docker.

#+BEGIN_SRC bash
$ docker run -it -v /path/to/src:/go/src golang:1.11-alpine
#+END_SRC

Or copy this file to a running container.

#+BEGIN_SRC bash
$ docker ps
CONTAINER ID        IMAGE
dcfd754d06f4        golang:1.11-alpine
$ docker cp /path/to/src/helloworld.go dcfd754d06f4:/go/src/
#+END_SRC

Then you can run this go file in the container.

#+BEGIN_SRC bash
# go run src/helloworld.go
Hello world!
#+END_SRC

* Go Proxy

Go website is blocked in PRC, to be able to use =go get= command to install dependencies, you will need Go proxy.

For recent version of Go, just set =GOPROXY=.
#+BEGIN_SRC bash
  go env -w GOPROXY=https://goproxy.io,direct
#+END_SRC

For older version of Go, =GO111MODULE= mode is also needed to be turned on.
#+BEGIN_SRC bash
  # file .profile
  export GO111MODULE=on
  export GOPROXY=https://goproxy.io
#+END_SRC

* Debugging

  Install dlv
#+BEGIN_SRC bash
go install github.com/go-delve/delve/cmd/dlv@latest
#+END_SRC

  Debug go application with dlv
#+BEGIN_SRC bash
dlv debug <app>
#+END_SRC
